'------------------------------------------------------------------------------
' CacheProvider version: 2015.1.0.225
'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.5483
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace Test
    
    '''<summary>
    '''Projection of class Test.Image
    '''</summary>
    Partial Public Class Image
        Inherits InterSystems.Data.CacheTypes.CachePersistent
        
        '''<summary>Server class name</summary>
        Public Const ServerClassName As String = "Test.Image"
        
        '''<summary>Meta information checksum</summary>
        Public Const ClassCheckSum As Long = 14993
        
        Private Shared CheckSumMethodDict As System.Collections.Generic.Dictionary(Of String, Integer) = New System.Collections.Generic.Dictionary(Of String, Integer)(13)
        
        Private Shared CheckSumQueryDict As System.Collections.Generic.Dictionary(Of String, Integer) = New System.Collections.Generic.Dictionary(Of String, Integer)(1)
        
        Private Shared PropertyInfoColn As System.Collections.Generic.List(Of InterSystems.Data.CacheClient.ObjBind.MetaInfo.PropertyInfo) = New System.Collections.Generic.List(Of InterSystems.Data.CacheClient.ObjBind.MetaInfo.PropertyInfo)(1)
        
        Private Shared AllPropertiesInfoColn As System.Collections.Generic.List(Of InterSystems.Data.CacheClient.ObjBind.MetaInfo.PropertyInfo)
        
        Shared Sub New()
            InterSystems.Data.CacheClient.CacheConnection.AddClientTypeDescr("Test.Image", GetType(Image))
            
            Test.Image.PropertyInfoColn.Add(New InterSystems.Data.CacheClient.ObjBind.MetaInfo.PropertyInfo("Pict", InterSystems.Data.CacheTypes.ClientTypeId.tObject, InterSystems.Data.CacheTypes.ClientObjTypeId.tBinStream, 53066))
            
            
        End Sub
        
        '''<summary>Internal API</summary>
        Public Sub New()
            MyBase.New
        End Sub
        
        '''<summary>Constructor that wraps the %New class method</summary>
        Public Sub New(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, <System.ParamArrayAttribute()> ByVal args() As Object)
            MyBase.New
            Me.Init(conn, Test.Image.ServerClassName, args)
        End Sub
        
        '''<summary>Constructor that wraps the %New class method</summary>
        Public Sub New(ByVal conn As InterSystems.Data.CacheClient.CacheConnection)
            MyBase.New
            Me.Init(conn, Test.Image.ServerClassName)
        End Sub
        
        '''<summary>
        '''Projection of property Pict
        '''</summary>
        Public Overridable Property Pict() As InterSystems.Data.CacheTypes.CacheBinaryStream
            Get
                Try 
                    System.Threading.Monitor.Enter(Me.Connection)
                    Me.AssertIsConnected
                    Me.Connection.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                    Dim mtdSignature As InterSystems.Data.CacheTypes.CacheMethodSignature = Me.Connection.GetMtdSignature
                    Try 
                        mtdSignature.SetReturnType(Me.Connection, GetType(InterSystems.Data.CacheTypes.CacheBinaryStream))
                        Me.GetPropertyS("Pict", mtdSignature)
                        Return CType(CType(mtdSignature.ReturnValue,InterSystems.Data.CacheTypes.CacheObjReturnValue).Value,InterSystems.Data.CacheTypes.CacheBinaryStream)
                    Finally
                        mtdSignature.Clear
                        Me.Connection.PostProcessing
                    End Try
                Finally
                    System.Threading.Monitor.Exit(Me.Connection)
                End Try
            End Get
            Set
                Try 
                    System.Threading.Monitor.Enter(Me.Connection)
                    Me.AssertIsConnected
                    Me.Connection.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                    Dim mtdSignature As InterSystems.Data.CacheTypes.CacheMethodSignature = Me.Connection.GetMtdSignature
                    Try 
                        mtdSignature.Add(value, Me.Connection, Nothing, false)
                        Me.SetPropertyS("Pict", mtdSignature)
                    Finally
                        mtdSignature.Clear
                        Me.Connection.PostProcessing
                    End Try
                Finally
                    System.Threading.Monitor.Exit(Me.Connection)
                End Try
            End Set
        End Property
        
        '''<summary>Projection of %Open()</summary>
        Public Overloads Shared Function Open(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id() As Byte, ByVal concurrency As Integer, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, concurrency, GetType(Test.Image), status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %Open()</summary>
        Public Overloads Shared Function Open(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id() As Byte, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, GetType(Test.Image), status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %Open()</summary>
        Public Overloads Shared Function Open(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id() As Byte) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, GetType(Test.Image)),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %Open()</summary>
        Public Overloads Shared Function Open(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id() As Byte, ByVal concurrency As Integer, ByVal timeout As Integer, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, concurrency, timeout, GetType(Test.Image), status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %Open()</summary>
        Public Overloads Shared Function Open(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id() As Byte, ByVal concurrency As Integer, ByVal propertyPaths As System.Collections.IEnumerable, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, concurrency, GetType(Test.Image), propertyPaths, status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %Open()</summary>
        Public Overloads Shared Function Open(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id() As Byte, ByVal concurrency As Integer, ByVal timeout As Integer, ByVal propertyPaths As System.Collections.IEnumerable, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, concurrency, timeout, GetType(Test.Image), propertyPaths, status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %Open()</summary>
        Public Overloads Shared Function Open(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id() As Byte, ByVal propertyPaths As System.Collections.IEnumerable) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, GetType(Test.Image), propertyPaths),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %OpenId()</summary>
        Public Overloads Shared Function OpenId(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id As String, ByVal concurrency As Integer, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, concurrency, GetType(Test.Image), status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %OpenId()</summary>
        Public Overloads Shared Function OpenId(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id As String, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, GetType(Test.Image), status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %OpenId()</summary>
        Public Overloads Shared Function OpenId(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id As String) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, GetType(Test.Image)),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %OpenId()</summary>
        Public Overloads Shared Function OpenId(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id As String, ByVal concurrency As Integer, ByVal timeout As Integer, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, concurrency, timeout, GetType(Test.Image), status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %OpenId()</summary>
        Public Overloads Shared Function OpenId(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id As String, ByVal concurrency As Integer, ByVal propertyPaths As System.Collections.IEnumerable, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, concurrency, GetType(Test.Image), propertyPaths, status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %OpenId()</summary>
        Public Overloads Shared Function OpenId(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id As String, ByVal concurrency As Integer, ByVal timeout As Integer, ByVal propertyPaths As System.Collections.IEnumerable, ByRef status As InterSystems.Data.CacheTypes.CacheStatus) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, concurrency, timeout, GetType(Test.Image), propertyPaths, status),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %OpenId()</summary>
        Public Overloads Shared Function OpenId(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id As String, ByVal propertyPaths As System.Collections.IEnumerable) As Test.Image
            Try 
                System.Threading.Monitor.Enter(conn)
                conn.GeneratedAssembly = System.Reflection.[Assembly].GetExecutingAssembly
                Return CType(conn.OpenProxyObj(Test.Image.ServerClassName, id, GetType(Test.Image), propertyPaths),Test.Image)
            Finally
                conn.PostProcessing
                System.Threading.Monitor.Exit(conn)
            End Try
        End Function
        
        '''<summary>Projection of %ExistsId()</summary>
        Public Shared Function ExistsId(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id As String) As System.Nullable(Of Boolean)
            Return Test.Image.ExistsIdInternal(conn, Test.Image.ServerClassName, id)
        End Function
        
        '''<summary>Projection of %DeleteId()</summary>
        Public Shared Function DeleteId(ByVal conn As InterSystems.Data.CacheClient.CacheConnection, ByVal id As String) As InterSystems.Data.CacheTypes.CacheStatus
            Return Test.Image.DeleteIdInternal(conn, Test.Image.ServerClassName, id)
        End Function
        
        '''<summary>Projection of %KillExtent()</summary>
        Public Shared Function KillExtent(ByVal conn As InterSystems.Data.CacheClient.CacheConnection) As InterSystems.Data.CacheTypes.CacheStatus
            Return Test.Image.KillExtentInternal(conn, Test.Image.ServerClassName)
        End Function
        
        '''<summary>Internal API</summary>
        Public Shared Sub AddToRuntimeMetaInfoClassList(ByVal list As System.Collections.Generic.List(Of String))
            list.Add(Test.Image.ServerClassName)
        End Sub
        
        '''<summary>Internal API</summary>
        Public Overrides Sub AddToRuntimeMetaInfoClassListWrapper(ByVal list As System.Collections.Generic.List(Of String))
            Test.Image.AddToRuntimeMetaInfoClassList(list)
        End Sub
        
        '''<summary>Internal API</summary>
        Public Shared Sub ValidateRuntimeMetaInfo(ByVal conn As InterSystems.Data.CacheClient.CacheConnection)
            Dim metaInfo As InterSystems.Data.CacheClient.ObjBind.MetaInfo.GenRuntimeClassDef = conn.GetGenRuntimeClassDef(Test.Image.ServerClassName)
            If metaInfo.Validate(Test.Image.ClassCheckSum, Test.Image.PropertyInfoColn, Test.Image.CheckSumMethodDict, Test.Image.CheckSumQueryDict, Test.Image.GetAllPropertiesInfoColn) Then
                Return
            End If
        End Sub
        
        '''<summary>Internal API</summary>
        Public Overrides Sub ValidateRuntimeMetaInfoWrapper(ByVal conn As InterSystems.Data.CacheClient.CacheConnection)
            Test.Image.ValidateRuntimeMetaInfo(conn)
        End Sub
        
        '''<summary>Internal API</summary>
        Protected Shared Function GetAllPropertiesInfoColn() As System.Collections.Generic.List(Of InterSystems.Data.CacheClient.ObjBind.MetaInfo.PropertyInfo)
            If (Not (Test.Image.AllPropertiesInfoColn) Is Nothing) Then
                Return Test.Image.AllPropertiesInfoColn
            End If
            Test.Image.AllPropertiesInfoColn = New System.Collections.Generic.List(Of InterSystems.Data.CacheClient.ObjBind.MetaInfo.PropertyInfo)(Test.Image.PropertyInfoColn)
            Return Test.Image.AllPropertiesInfoColn
        End Function
        
        '''<summary>Class server name</summary>
        Public Overrides Function ClassServerName() As String
            Return Test.Image.ServerClassName
        End Function
        
        '''<summary>Internal API</summary>
        Public Overrides Function IsClassGeneratedImpl() As Boolean
            Return true
        End Function
    End Class
End Namespace
